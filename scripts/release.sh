#!/bin/bash

# Script para gerenciar vers√µes do projeto
# Uso: ./scripts/release.sh [patch|minor|major]

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para mostrar uso
show_usage() {
    echo -e "${YELLOW}Uso: ./scripts/release.sh [patch|minor|major]${NC}"
    echo -e "${BLUE}  patch${NC} - Para corre√ß√µes de bugs (0.0.1)"
    echo -e "${BLUE}  minor${NC} - Para novas funcionalidades (0.1.0)"
    echo -e "${BLUE}  major${NC} - Para mudan√ßas breaking (1.0.0)"
    exit 1
}

# Verificar se o argumento foi fornecido
if [ $# -eq 0 ]; then
    show_usage
fi

VERSION_TYPE=$1

# Verificar se o tipo de vers√£o √© v√°lido
if [[ ! "$VERSION_TYPE" =~ ^(patch|minor|major)$ ]]; then
    echo -e "${RED}Erro: Tipo de vers√£o inv√°lido '$VERSION_TYPE'${NC}"
    show_usage
fi

echo -e "${BLUE}üöÄ Iniciando processo de release...${NC}"

# Verificar se estamos na branch main
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo -e "${RED}Erro: Voc√™ deve estar na branch main para criar uma release${NC}"
    exit 1
fi

# Verificar se n√£o h√° mudan√ßas n√£o commitadas
if [[ -n $(git status --porcelain) ]]; then
    echo -e "${RED}Erro: H√° mudan√ßas n√£o commitadas. Fa√ßa commit antes de continuar.${NC}"
    exit 1
fi

# Atualizar a branch main
echo -e "${YELLOW}üì• Atualizando branch main...${NC}"
git pull origin main

# Incrementar vers√£o no package.json
echo -e "${YELLOW}üìù Incrementando vers√£o ($VERSION_TYPE)...${NC}"
npm version $VERSION_TYPE --no-git-tag-version

# Obter nova vers√£o
NEW_VERSION=$(node -p "require('./package.json').version")
echo -e "${GREEN}‚úÖ Nova vers√£o: v$NEW_VERSION${NC}"

# Fazer commit das mudan√ßas
echo -e "${YELLOW}üíæ Fazendo commit das mudan√ßas...${NC}"
git add package.json
git commit -m "chore: bump version to v$NEW_VERSION"

# Criar tag
echo -e "${YELLOW}üè∑Ô∏è  Criando tag v$NEW_VERSION...${NC}"
git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"

# Push das mudan√ßas e tag
echo -e "${YELLOW}üöÄ Fazendo push das mudan√ßas...${NC}"
git push origin main
git push origin "v$NEW_VERSION"

echo -e "${GREEN}üéâ Release v$NEW_VERSION criada com sucesso!${NC}"
echo -e "${BLUE}üìã Pr√≥ximos passos:${NC}"
echo -e "   1. V√° para: https://github.com/Andre-D-Rez/Portfolio/releases"
echo -e "   2. Crie uma nova release para a tag v$NEW_VERSION"
echo -e "   3. Adicione as notas da release"